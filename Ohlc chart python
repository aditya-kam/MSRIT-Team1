{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 21,
   "source": [
    "import pandas as pd\r\n",
    "import matplotlib.pyplot as plt\r\n",
    "import numpy as np\r\n",
    "import math"
   ],
   "outputs": [],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "source": [
    "df = pd.read_csv('F:\\MSRUAS NOTES\\Project(NT)\\Stock List.csv')\r\n",
    "n = 1"
   ],
   "outputs": [],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "source": [
    "# filter Apple stocks\r\n",
    "df_apple = df[df['symbol'] == 'AAPL'].copy()\r\n",
    "# convert date column from string to date\r\n",
    "df_apple['date'] = pd.to_datetime(df_apple['date']) \r\n",
    "# filter records after 2017\r\n",
    "df_apple = df_apple[df_apple['date'].dt.year > 2017] \r\n",
    "df_apple.reset_index(inplace=True)\r\n",
    "\r\n",
    "x = np.arange(0,len(df_apple))\r\n",
    "fig, ax = plt.subplots(1, figsize=(14,6))\r\n",
    "for key, val in df_apple.iterrows():\r\n",
    "    # high/low lines\r\n",
    "    plt.plot([x[key], x[key]], \r\n",
    "             [val['low'], val['high']])\r\n",
    "    # open marker\r\n",
    "    plt.plot([x[key], x[key]-0.1], \r\n",
    "             [val['open'], val['open']])\r\n",
    "    # close marker\r\n",
    "    plt.plot([x[key], x[key]+0.1], \r\n",
    "             [val['close'], val['close']])\r\n",
    "    \r\n",
    "    # Colouring\r\n",
    "    color = '#2CA453'\r\n",
    "    if val['open'] > val['close']: color= '#F04730'\r\n",
    "    plt.plot([x[key], x[key]], \r\n",
    "             [val['low'], val['high']], \r\n",
    "             color=color)\r\n",
    "    plt.plot([x[key], x[key]-0.1], \r\n",
    "             [val['open'], val['open']], \r\n",
    "             color=color)\r\n",
    "    plt.plot([x[key], x[key]+0.1], \r\n",
    "             [val['close'], val['close']], \r\n",
    "             color=color)\r\n",
    "# ylabels\r\n",
    "plt.ylabel('Stock Price in rupess')\r\n",
    "# xlabels\r\n",
    "plt.ylabel('Date')\r\n",
    "# grid\r\n",
    "ax.xaxis.grid(color='black', linestyle='dashed', which='both', alpha=0.1)\r\n",
    "# remove spines\r\n",
    "ax.spines['right'].set_visible(False)\r\n",
    "ax.spines['top'].set_visible(False)\r\n",
    "# title\r\n",
    "plt.title('Apple Stock Price', loc='left', fontsize=20)  \r\n",
    "plt.show()"
   ],
   "outputs": [
    {
     "output_type": "error",
     "ename": "IndentationError",
     "evalue": "expected an indented block (<ipython-input-23-c984dfa2f48d>, line 13)",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"<ipython-input-23-c984dfa2f48d>\"\u001b[1;36m, line \u001b[1;32m13\u001b[0m\n\u001b[1;33m    plt.plot([x[key], x[key]],\u001b[0m\n\u001b[1;37m    ^\u001b[0m\n\u001b[1;31mIndentationError\u001b[0m\u001b[1;31m:\u001b[0m expected an indented block\n"
     ]
    }
   ],
   "metadata": {}
  }
 ],
 "metadata": {
  "orig_nbformat": 4,
  "language_info": {
   "name": "python",
   "version": "3.8.0",
   "mimetype": "text/x-python",
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "pygments_lexer": "ipython3",
   "nbconvert_exporter": "python",
   "file_extension": ".py"
  },
  "kernelspec": {
   "name": "python3",
   "display_name": "Python 3.8.0 32-bit"
  },
  "interpreter": {
   "hash": "7a542ca580817fc4dd55327026e074e2fa0cd470fc5dee9350c2d8b13822db8d"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}